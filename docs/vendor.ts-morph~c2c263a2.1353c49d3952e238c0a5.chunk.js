(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{"/CRz":function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.DirectoryEmitResult=class{constructor(t,e){this._skippedFilePaths=t,this._outputFilePaths=e}getEmitSkipped(){return this._skippedFilePaths.length>0}getSkippedFilePaths(){return this._skippedFilePaths}getOutputFilePaths(){return this._outputFilePaths}}},Ankb:function(t,e,r){"use strict";(function(t){var i=this&&this.__awaiter||function(e,r,i,s){return new(i||(i=t))(function(t,o){function n(t){try{a(s.next(t))}catch(t){o(t)}}function c(t){try{a(s.throw(t))}catch(t){o(t)}}function a(e){e.done?t(e.value):new i(function(t){t(e.value)}).then(n,c)}a((s=s.apply(e,r||[])).next())})};Object.defineProperty(e,"__esModule",{value:!0});const s=r("ejOz"),o=r("EboW"),n=r("1hU1"),c=r("qYB5"),a=r("/CRz");class h{constructor(t,e){this.__context=t,this._setPathInternal(e)}_setPathInternal(t){this._path=t,this._pathParts=t.split("/").filter(t=>t.length>0)}get _context(){return this._throwIfDeletedOrRemoved(),this.__context}isAncestorOf(t){return h._isAncestorOfDir(this,t)}isDescendantOf(t){return h._isAncestorOfDir(t,this)}_getDepth(){return this._pathParts.length}getPath(){return this._throwIfDeletedOrRemoved(),this._path}getBaseName(){return this._pathParts[this._pathParts.length-1]}getParentOrThrow(){return o.throwIfNullOrUndefined(this.getParent(),()=>`Parent directory of ${this.getPath()} does not exist or was never added.`)}getParent(){if(!c.FileUtils.isRootDirPath(this.getPath()))return this.addExistingDirectoryIfExists(c.FileUtils.getDirPath(this.getPath()))}getDirectoryOrThrow(t){return o.throwIfNullOrUndefined(this.getDirectory(t),()=>"string"==typeof t?`Could not find a directory at path '${this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath())}'.`:"Could not find child directory that matched condition.")}getDirectory(t){if("string"==typeof t){const e=this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath());return this._context.compilerFactory.getDirectoryFromCache(e)}return this.getDirectories().find(t)}getSourceFileOrThrow(t){return o.throwIfNullOrUndefined(this.getSourceFile(t),()=>"string"==typeof t?`Could not find child source file at path '${this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath())}'.`:"Could not find child source file that matched condition.")}getSourceFile(t){if("string"==typeof t){const e=this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath());return this._context.compilerFactory.getSourceFileFromCacheFromFilePath(e)}return this.getSourceFiles().find(t)}getDirectories(){return this._context.compilerFactory.getChildDirectoriesOfDirectory(this.getPath())}getSourceFiles(){return this._context.compilerFactory.getChildSourceFilesOfDirectory(this.getPath())}getDescendantSourceFiles(){return Array.from(this._getDescendantSourceFilesIterator())}*_getDescendantSourceFilesIterator(){for(const t of this.getSourceFiles())yield t;for(const t of this.getDirectories())yield*t._getDescendantSourceFilesIterator()}getDescendantDirectories(){return Array.from(this._getDescendantDirectoriesIterator())}*_getDescendantDirectoriesIterator(){for(const t of this.getDirectories())yield t,yield*t._getDescendantDirectoriesIterator()}addExistingSourceFiles(t){return t=(t="string"==typeof t?[t]:t).map(t=>c.FileUtils.pathIsAbsolute(t)?t:c.FileUtils.pathJoin(this.getPath(),t)),this._context.directoryCoordinator.addExistingSourceFiles(t,{markInProject:this._isInProject()})}addExistingDirectoryIfExists(t,e={}){return t=this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath()),this._context.directoryCoordinator.addExistingDirectoryIfExists(t,Object.assign({},e,{markInProject:this._isInProject()}))}addExistingDirectory(t,e={}){return t=this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath()),this._context.directoryCoordinator.addExistingDirectory(t,Object.assign({},e,{markInProject:this._isInProject()}))}createDirectory(t){return t=this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath()),this._context.directoryCoordinator.createDirectoryOrAddIfExists(t,{markInProject:this._isInProject()})}createSourceFile(t,e,r){const i=this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath());return this._context.compilerFactory.createSourceFile(i,e||"",Object.assign({},r||{},{markInProject:this._isInProject()}))}addExistingSourceFileIfExists(t){const e=this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath());return this._context.directoryCoordinator.addExistingSourceFileIfExists(e,{markInProject:this._isInProject()})}addExistingSourceFile(t){const e=this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath());return this._context.directoryCoordinator.addExistingSourceFile(e,{markInProject:this._isInProject()})}emit(e={}){return i(this,void 0,void 0,function*(){const{fileSystemWrapper:r}=this._context,i=[],s=[],o=[];for(const t of this._emitInternal(e))"string"==typeof t?o.push(t):(i.push(r.writeFile(t.filePath,t.fileText)),s.push(t.filePath));return yield t.all(i),new a.DirectoryEmitResult(o,s)})}emitSync(t={}){const{fileSystemWrapper:e}=this._context,r=[],i=[];for(const s of this._emitInternal(t))"string"==typeof s?i.push(s):(e.writeFileSync(s.filePath,s.fileText),r.push(s.filePath));return new a.DirectoryEmitResult(i,r)}_emitInternal(t={}){const{emitOnlyDtsFiles:e=!1}=t,r=null==t.outDir?void 0:/\.js$/i,i=null==t.outDir?void 0:/\.js\.map$/i,s=null==t.declarationDir&&null==t.outDir?void 0:/\.d\.ts$/i,o=t=>null==t?void 0:this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath()),n=(t,e)=>null==t?void 0:c.FileUtils.pathJoin(t,e.getBaseName()),a=null!=this._context.compilerOptions.get().declarationDir||null!=t.declarationDir;return function*t(o,h,l){for(const t of o.getSourceFiles()){const o=t.getEmitOutput({emitOnlyDtsFiles:e});if(o.getEmitSkipped())yield t.getFilePath();else for(const t of o.getOutputFiles()){let e=t.getFilePath();const o=t.getWriteByteOrderMark()?c.FileUtils.getTextWithByteOrderMark(t.getText()):t.getText();null!=h&&(r.test(e)||i.test(e)||!a&&s.test(e))?e=c.FileUtils.pathJoin(h,c.FileUtils.getBaseName(e)):null!=l&&s.test(e)&&(e=c.FileUtils.pathJoin(l,c.FileUtils.getBaseName(e))),yield{filePath:e,fileText:o}}}for(const e of o.getDirectories())yield*t(e,n(h,e),n(l,e))}(this,o(t.outDir),o(t.declarationDir))}copyToDirectory(t,e){const r="string"==typeof t?t:t.getPath();return this.copy(c.FileUtils.pathJoin(r,this.getBaseName()),e)}copy(t,e){const r=this.getPath(),i=this._context.fileSystemWrapper,s=this._context.fileSystemWrapper.getStandardizedAbsolutePath(t,this.getPath());return r===s?this:((e=l(e)).includeUntrackedFiles&&i.queueCopyDirectory(r,s),this._copyInternal(s,e))}copyImmediately(t,e){return i(this,void 0,void 0,function*(){const r=this._context.fileSystemWrapper,i=this.getPath(),s=r.getStandardizedAbsolutePath(t,i);if(i===s)return yield this.save(),this;e=l(e);const o=this._copyInternal(s,e);return e.includeUntrackedFiles&&(yield r.copyDirectoryImmediately(i,s)),yield o.save(),o})}copyImmediatelySync(t,e){const r=this._context.fileSystemWrapper,i=this.getPath(),s=r.getStandardizedAbsolutePath(t,i);if(i===s)return this.saveSync(),this;e=l(e);const o=this._copyInternal(s,e);return e.includeUntrackedFiles&&r.copyDirectoryImmediatelySync(i,s),o.saveSync(),o}_copyInternal(t,e){if(this.getPath()===t)return this;const{fileSystemWrapper:r,compilerFactory:i}=this._context,s=[this,...this.getDescendantDirectories()].map(e=>({newDirPath:e===this?t:r.getStandardizedAbsolutePath(this.getRelativePathTo(e),t)})),o=this.getDescendantSourceFiles().map(e=>({sourceFile:e,newFilePath:r.getStandardizedAbsolutePath(this.getRelativePathTo(e),t),references:this._getReferencesForCopy(e)}));for(const{newDirPath:t}of s)this._context.compilerFactory.createDirectoryOrAddIfExists(t,{markInProject:this._isInProject()});for(const{sourceFile:t,newFilePath:r}of o)t._copyInternal(r,e);for(const{references:t,newFilePath:e}of o)this.getSourceFileOrThrow(e)._updateReferencesForCopyInternal(t);return i.getDirectoryFromCache(t)}moveToDirectory(t,e){const r="string"==typeof t?t:t.getPath();return this.move(c.FileUtils.pathJoin(r,this.getBaseName()),e)}move(t,e){const r=this._context.fileSystemWrapper,i=this.getPath(),s=r.getStandardizedAbsolutePath(t,i);return i===s?this:this._moveInternal(s,e,()=>r.queueMoveDirectory(i,s))}moveImmediately(t,e){return i(this,void 0,void 0,function*(){const r=this._context.fileSystemWrapper,i=this.getPath(),s=r.getStandardizedAbsolutePath(t,i);return i===s?(yield this.save(),this):(this._moveInternal(s,e),yield r.moveDirectoryImmediately(i,s),yield this.save(),this)})}moveImmediatelySync(t,e){const r=this._context.fileSystemWrapper,i=this.getPath(),s=r.getStandardizedAbsolutePath(t,i);return i===s?(this.saveSync(),this):(this._moveInternal(s,e),r.moveDirectoryImmediatelySync(i,s),this.saveSync(),this)}_moveInternal(t,e,r){const i=this.getPath();if(i===t)return this;const s=this._context.compilerFactory.getDirectoryFromCacheOnlyIfInCache(t),o=null!=s&&s._isInProject();r&&r();const n=this._context.fileSystemWrapper,c=this._context.compilerFactory,a=[this,...this.getDescendantDirectories()].map(e=>({directory:e,oldPath:e.getPath(),newDirPath:e===this?t:n.getStandardizedAbsolutePath(this.getRelativePathTo(e),t)})),h=this.getDescendantSourceFiles().map(e=>({sourceFile:e,newFilePath:n.getStandardizedAbsolutePath(this.getRelativePathTo(e),t),references:this._getReferencesForMove(e)}));for(const{directory:t,oldPath:e,newDirPath:r}of a){c.removeDirectoryFromCache(e);const i=c.getDirectoryFromCache(r);null!=i&&i._forgetOnlyThis(),t._setPathInternal(r),c.addDirectoryToCache(t)}for(const{sourceFile:t,newFilePath:r}of h)t._moveInternal(r,e);for(const{sourceFile:t,references:e}of h)t._updateReferencesForMoveInternal(e,i);return o&&this._markAsInProject(),this}delete(){const{fileSystemWrapper:t}=this._context,e=this.getPath();for(const t of this.getSourceFiles())t.delete();for(const t of this.getDirectories())t.delete();t.queueDirectoryDelete(e),this.forget()}deleteImmediately(){return i(this,void 0,void 0,function*(){const{fileSystemWrapper:t}=this._context,e=this.getPath();this.forget(),yield t.deleteDirectoryImmediately(e)})}deleteImmediatelySync(){const{fileSystemWrapper:t}=this._context,e=this.getPath();this.forget(),t.deleteDirectoryImmediatelySync(e)}forget(){if(!this.wasForgotten()){for(const t of this.getSourceFiles())t.forget();for(const t of this.getDirectories())t.forget();this._forgetOnlyThis()}}_forgetOnlyThis(){this.wasForgotten()||(this._context.compilerFactory.removeDirectoryFromCache(this.getPath()),this.__context=void 0)}save(){return i(this,void 0,void 0,function*(){yield this._context.fileSystemWrapper.saveForDirectory(this.getPath());const e=this.getDescendantSourceFiles().filter(t=>!t.isSaved());yield t.all(e.map(t=>t.save()))})}saveSync(){this._context.fileSystemWrapper.saveForDirectorySync(this.getPath()),this.getDescendantSourceFiles().filter(t=>!t.isSaved()).forEach(t=>t.saveSync())}getRelativePathTo(t){return c.FileUtils.getRelativePathTo(this.getPath(),t instanceof s.SourceFile?t.getFilePath():t.getPath())}getRelativePathAsModuleSpecifierTo(t){const e=this._context.program.getEmitModuleResolutionKind(),r=this,i=c.FileUtils.getRelativePathTo(this.getPath(),function(){return t instanceof s.SourceFile?function(t){switch(e){case n.ModuleResolutionKind.NodeJs:const i=t.getFilePath();return t.getDirectory()===r?i:i.replace(/\/index?(\.d\.ts|\.ts|\.js)$/i,"");case n.ModuleResolutionKind.Classic:return t.getFilePath();default:return o.throwNotImplementedForNeverValueError(e)}}(t):function(t){switch(e){case n.ModuleResolutionKind.NodeJs:return t===r?c.FileUtils.pathJoin(t.getPath(),"index.ts"):t.getPath();case n.ModuleResolutionKind.Classic:return c.FileUtils.pathJoin(t.getPath(),"index.ts");default:return o.throwNotImplementedForNeverValueError(e)}}(t)}()).replace(/((\.d\.ts$)|(\.[^\/.]+$))/i,"");return i.startsWith("../")?i:"./"+i}wasForgotten(){return null==this.__context}_isInProject(){return this._context.inProjectCoordinator.isDirectoryInProject(this)}_markAsInProject(){this._context.inProjectCoordinator.markDirectoryAsInProject(this)}_hasLoadedParent(){return this._context.compilerFactory.containsDirectoryAtPath(c.FileUtils.getDirPath(this.getPath()))}_throwIfDeletedOrRemoved(){if(this.wasForgotten())throw new o.InvalidOperationError("Cannot use a directory that was deleted, removed, or overwritten.")}_getReferencesForCopy(t){return t._getReferencesForCopyInternal().filter(t=>!this.isAncestorOf(t[1]))}_getReferencesForMove(t){const{literalReferences:e,referencingLiterals:r}=t._getReferencesForMoveInternal();return{literalReferences:e.filter(t=>!this.isAncestorOf(t[1])),referencingLiterals:r.filter(t=>!this.isAncestorOf(t._sourceFile))}}static _isAncestorOfDir(t,e){if(e instanceof s.SourceFile&&t===(e=e.getDirectory()))return!0;if(t._pathParts.length>=e._pathParts.length)return!1;for(let r=t._pathParts.length-1;r>=0;r--)if(t._pathParts[r]!==e._pathParts[r])return!1;return!0}}function l(t){return t=c.ObjectUtils.clone(t||{}),c.setValueIfUndefined(t,"includeUntrackedFiles",!0),t}e.Directory=h}).call(this,r("B/eG").default)},Fqg9:function(t,e,r){"use strict";(function(t,i){var s=this&&this.__awaiter||function(e,r,i,s){return new(i||(i=t))(function(t,o){function n(t){try{a(s.next(t))}catch(t){o(t)}}function c(t){try{a(s.throw(t))}catch(t){o(t)}}function a(e){e.done?t(e.value):new i(function(t){t(e.value)}).then(n,c)}a((s=s.apply(e,r||[])).next())})};Object.defineProperty(e,"__esModule",{value:!0});const o=r("33yf"),n=r("EboW"),c=r("qYB5");e.DefaultFileSystemHost=class{constructor(){this.fs=r(9),this.globby=r(10)}delete(e){return new t((t,r)=>{this.fs.unlink(e,i=>{i?r(this.getFileNotFoundErrorIfNecessary(i,e)):t()})})}deleteSync(t){try{this.fs.unlinkSync(t)}catch(e){throw this.getFileNotFoundErrorIfNecessary(e,t)}}readDirSync(t){try{return this.fs.readdirSync(t).map(e=>c.FileUtils.pathJoin(t,e))}catch(e){throw this.getDirectoryNotFoundErrorIfNecessary(e,t)}}readFile(e,r="utf-8"){return new t((t,i)=>{this.fs.readFile(e,r,(r,s)=>{r?i(this.getFileNotFoundErrorIfNecessary(r,e)):t(s)})})}readFileSync(t,e="utf-8"){try{return this.fs.readFileSync(t,e)}catch(e){throw this.getFileNotFoundErrorIfNecessary(e,t)}}writeFile(e,r){return s(this,void 0,void 0,function*(){yield new t((t,i)=>{this.fs.writeFile(e,r,e=>{e?i(e):t()})})})}writeFileSync(t,e){this.fs.writeFileSync(t,e)}mkdir(t){return s(this,void 0,void 0,function*(){try{yield this.fs.mkdirp(t)}catch(t){if("EEXIST"!==t.code)throw t}})}mkdirSync(t){try{this.fs.mkdirpSync(t)}catch(t){if("EEXIST"!==t.code)throw t}}move(t,e){return this.fs.move(t,e,{overwrite:!0})}moveSync(t,e){this.fs.moveSync(t,e,{overwrite:!0})}copy(t,e){return this.fs.copy(t,e,{overwrite:!0})}copySync(t,e){this.fs.copySync(t,e,{overwrite:!0})}fileExists(e){return new t(t=>{this.fs.stat(e,(e,r)=>{t(!e&&r.isFile())})})}fileExistsSync(t){try{return this.fs.statSync(t).isFile()}catch(t){return!1}}directoryExists(e){return new t(t=>{this.fs.stat(e,(e,r)=>{t(!e&&r.isDirectory())})})}directoryExistsSync(t){try{return this.fs.statSync(t).isDirectory()}catch(t){return!1}}realpathSync(t){return this.fs.realpathSync(t)}getCurrentDirectory(){return c.FileUtils.standardizeSlashes(o.resolve())}glob(t){return t=t.map(t=>t.replace(/\\/g,"/")),this.globby.sync(t,{cwd:this.getCurrentDirectory(),absolute:!0})}isCaseSensitive(){const t=i.platform;return"win32"!==t&&"darwin"!==t}getDirectoryNotFoundErrorIfNecessary(t,e){return c.FileUtils.isNotExistsError(t)?new n.DirectoryNotFoundError(e):t}getFileNotFoundErrorIfNecessary(t,e){return c.FileUtils.isNotExistsError(t)?new n.FileNotFoundError(e):t}}}).call(this,r("B/eG").default,r("8oxB"))},PqEw:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=r("EboW"),s=r("qYB5");e.DirectoryCoordinator=class{constructor(t,e){this.compilerFactory=t,this.fileSystemWrapper=e}addExistingDirectoryIfExists(t,e){const r=this.compilerFactory.getDirectoryFromPath(t,e);if(null!=r){if(e.recursive)for(const r of s.FileUtils.getDescendantDirectories(this.fileSystemWrapper,t))this.compilerFactory.createDirectoryOrAddIfExists(r,e);return r}}addExistingDirectory(t,e){const r=this.addExistingDirectoryIfExists(t,e);if(null==r)throw new i.DirectoryNotFoundError(t);return r}createDirectoryOrAddIfExists(t,e){return this.compilerFactory.createDirectoryOrAddIfExists(t,e)}addExistingSourceFileIfExists(t,e){return this.compilerFactory.addOrGetSourceFileFromFilePath(t,{markInProject:e.markInProject,scriptKind:void 0})}addExistingSourceFile(t,e){const r=this.addExistingSourceFileIfExists(t,e);if(null==r)throw new i.FileNotFoundError(this.fileSystemWrapper.getStandardizedAbsolutePath(t));return r}addExistingSourceFiles(t,e){"string"==typeof t&&(t=[t]);const r=[],i=s.FileUtils.getParentMostPaths(t.filter(t=>!s.FileUtils.isNegatedGlob(t)).map(t=>s.FileUtils.getGlobDir(t)));for(const i of this.fileSystemWrapper.glob(t)){const t=this.addExistingSourceFileIfExists(i,e);null!=t&&r.push(t)}for(const t of i)this.addExistingDirectoryIfExists(t,{recursive:!0,markInProject:e.markInProject});return r}}}}]);
//# sourceMappingURL=vendor.ts-morph~c2c263a2.1353c49d3952e238c0a5.bundle.map